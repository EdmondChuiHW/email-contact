{"version":3,"sources":["imgs/gmail.ico","imgs/outlook.ico","imgs/yahoo.ico","components/loading/index.js","components/loading/Loading.js","components/search-bar/index.js","components/search-bar/search-bar.component.js","services/address2councillor.service.js","hooks/use-councillor/index.js","hooks/use-councillor/use-councillor.hook.js","utils/yeg-core-zone-template.js","services/email-providers/href-sanitizer.js","services/email-providers/gmail-provider.js","services/email-providers/outlook-provider.js","services/email-providers/index.js","services/email-providers/yahoo-provider.js","components/email-array/email-button.js","components/email-array/index.js","components/email-array/email-array.js","components/councillor-card/index.js","components/councillor-card/councillor-card.js","utils/geo-location-provider.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Loading","_ref","_ref$isLoading","isLoading","_ref$size","size","_ref$className","className","children","react_default","a","createElement","CircularProgress_default","thickness","SearchBar","_ref$query","query","_ref$label","label","setQuery","clearQuery","useCallback","onChange","e","target","value","Paper_default","elevation","InputBase_default","autoComplete","placeholder","loading","IconButton_default","aria-label","onClick","Clear_default","Search_default","getCouncillorFromAddress","address","arguments","length","undefined","request","url","json","qs","useCouncillor","_ref$address","_ref$coords","coords","latitude","longitude","_useState","useState","_useState2","Object","slicedToArray","councillor","setCouncillor","_useState3","_useState4","completedQuery","setCompletedQuery","onCouncillorLoaded","pipe","useEffect","req","_ref$latitude","_ref$longitude","concat","getCouncillorFromGeo","then","abort","clickableCoreZone","href","rel","makeYegCoreZoneEmail","juxt","_ref$role","role","_ref$lastName","lastName","_ref$ward","ward","_ref2","_ref2$role","_ref2$lastName","_ref2$ward","Fragment","always","hrefSanitizer","_ref$subject","subject","_ref$body","body","rest","objectWithoutProperties","objectSpread","encodeURIComponent","gmailProvider","name","src","gmailIcon","hrefResolver","_ref$email","email","_ref$cc","cc","outlookProvider","outlookIcon","emailProviders","yahooIcon","EmailButton","_ref$name","_ref$src","_ref$href","Button_default","color","width","height","alt","EmailArray","_ref3","_ref3$email","_ref3$cc","_ref3$subject","_ref3$body","map","_ref2$name","_ref2$src","email_array_email_button","key","makeButtonFromProvider","CouncillorCard","_ref$firstName","firstName","_ref$phone","phone","_ref$photoUrl","photoUrl","subtitle","when","startsWith","s","normalizeWard","_makeYegCoreZoneEmail","_makeYegCoreZoneEmail2","emailBody","emailDisplay","emailSubject","CardContent_default","Typography_default","variant","component","paragraph","index_es","CardActions_default","dist","Email_default","components_email_array","Call_default","geolocationProvider","navigator","geolocation","geoLocatedConfig","positionOptions","enableHighAccuracy","timeout","userDecisionTimeout","geolocated","_useDebounce","useDebounce","debouncedQuery","_useCouncillor","_useCouncillor2","originalQuery","iframe_pls","queryString","window","location","search","classNames","iframe-pls","CssBaseline_default","search_bar","gutterBottom","components_councillor_card","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea11983f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gmail.2db0d88c.ico\";","module.exports = __webpack_public_path__ + \"static/media/outlook.759fade9.ico\";","module.exports = __webpack_public_path__ + \"static/media/yahoo.9796ed78.ico\";","import Loading from \"./Loading\";\n\nexport default Loading;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Loading = ({isLoading = false, size = 24, className = '', children}) => isLoading\n  ? <CircularProgress size={size} thickness={4.8} className={className}/>\n  : children;\n\nexport default Loading;\n","import SearchBar from \"./search-bar.component\";\n\nexport default SearchBar;\n","import React, {useCallback} from 'react';\nimport Paper from \"@material-ui/core/Paper/index\";\nimport IconButton from \"@material-ui/core/IconButton/index\";\nimport InputBase from \"@material-ui/core/InputBase/index\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport './search-bar.component.css';\nimport Loading from \"../loading\";\n\nconst SearchBar = ({query = '', label = '', isLoading = false, setQuery}) => {\n  const clearQuery = useCallback(() => setQuery(''), []);\n  const onChange = useCallback(e => setQuery(e.target.value), []);\n\n  return <Paper className=\"root\" elevation={1}>\n    <InputBase\n      autoComplete=\"postal-code\"\n      className=\"input\"\n      placeholder={label}\n      value={query}\n      onChange={onChange}\n    />\n    <Loading isLoading={isLoading} className=\"loading\">\n      {query\n        ? <IconButton aria-label=\"Locate me\" onClick={clearQuery}>\n          <ClearIcon/>\n        </IconButton>\n        : <IconButton aria-label=\"Search\">\n          <SearchIcon/>\n        </IconButton>\n      }\n    </Loading>\n  </Paper>;\n};\n\nexport default SearchBar;\n","import request from \"request-promise-native\";\n\nexport const getCouncillorFromAddress = (address = '') => request({\n  url: 'https://address2contact.herokuapp.com/address2councillor',\n  json: true,\n  qs: {\n    address,\n  },\n});\n\nexport const getCouncillorFromGeo = ({latitude = 0, longitude = 0}) => (\n  getCouncillorFromAddress(`geo: lng: ${longitude}, lat: ${latitude}`)\n);\n","import useCouncillor from \"./use-councillor.hook\";\n\nexport default useCouncillor;\n","import {useEffect, useState} from 'react';\nimport {getCouncillorFromAddress, getCouncillorFromGeo} from \"../../services/address2councillor.service\";\nimport {pipe} from \"ramda\";\n\nconst useCouncillor = ({address = '', coords = {latitude: 0, longitude: 0}}) => {\n  const [councillor, setCouncillor] = useState(undefined);\n  const [completedQuery, setCompletedQuery] = useState(undefined);\n\n  const onCouncillorLoaded = pipe(\n    setCouncillor,\n    () => setCompletedQuery(address),\n  );\n\n  useEffect(() => {\n    const req = coords && !address\n      ? getCouncillorFromGeo(coords)\n      : getCouncillorFromAddress(address);\n    req.then(onCouncillorLoaded);\n    return () => req.abort();\n  }, [address, coords]);\n  return [councillor, completedQuery];\n};\n\nexport default useCouncillor;\n","import React from \"react\";\nimport {always, juxt} from \"ramda\";\n\nconst makeYegCoreZoneEmailBody = ({role = 'Mayor', lastName = 'Iveson', ward = ''}) =>\n  (`Dear ${role} ${lastName},\n\nI'm writing in support of the #YEGCoreZone proposal.\n\nThank you,\nResident of ${ward || 'Edmonton'}`\n  );\n\nconst clickableCoreZone = <a\n  href=\"https://twitter.com/search?q=YEGCoreZone\"\n  target=\"_blank\"\n  rel=\"noopener noreferrer\">\n  #YEGCoreZone\n</a>;\n\nconst makeYegCoreZoneEmailDisplay = ({role = 'Mayor', lastName = 'Iveson', ward = ''}) =>\n  (<>{`Dear ${role} ${lastName},\n\nI'm writing in support of the`} {clickableCoreZone} {`proposal.\n\nThank you,\nResident of ${ward || 'Edmonton'}`}\n  </>);\n\nconst makeYegCoreZoneEmail = juxt([\n  makeYegCoreZoneEmailBody,\n  makeYegCoreZoneEmailDisplay,\n  always('Support letter for #YEGCoreZone'),\n]);\n\nexport default makeYegCoreZoneEmail;\n","const hrefSanitizer = ({subject = '', body = '', ...rest}) => ({\n  subject: encodeURIComponent(subject),\n  body: encodeURIComponent(body),\n  ...rest,\n});\n\nexport default hrefSanitizer;\n","import gmailIcon from \"../../imgs/gmail.ico\";\nimport {pipe} from \"ramda\";\nimport hrefSanitizer from \"./href-sanitizer\";\n\nconst hrefResolver = ({email = '', cc = '', subject = '', body = ''}) => (\n  // Sep 19 2016 http://stackoverflow.com/a/8852679/\n  `https://mail.google.com/mail/?view=cm&fs=1&to=${email}&cc=${cc}&su=${subject}&body=${body}`\n);\n\nconst gmailProvider = {\n  name: 'Gmail',\n  src: gmailIcon,\n  hrefResolver: pipe(hrefSanitizer, hrefResolver),\n};\n\nexport default gmailProvider;\n","import outlookIcon from \"../../imgs/outlook.ico\";\nimport {pipe} from \"ramda\";\nimport hrefSanitizer from \"./href-sanitizer\";\n\nconst hrefResolver = ({email = '', cc = '', subject = '', body = ''}) => (\n  // Apr 21 2019 https://blogs.msdn.microsoft.com/carloshm/2016/01/16/how-to-compose-a-new-message-or-event-and-populate-fields-in-office365/#comment-1645\n  // cc not support. Thanks Micro$0ft\n  `https://outlook.live.com/?path=/mail/action/compose&to=${email}&cc=${cc}&subject=${subject}&body=${body}`\n);\n\nconst outlookProvider = {\n  name: 'Outlook',\n  src: outlookIcon,\n  hrefResolver: pipe(hrefSanitizer, hrefResolver),\n};\n\nexport default outlookProvider;\n","import gmailProvider from \"./gmail-provider\";\nimport outlookProvider from \"./outlook-provider\";\nimport yahooProvider from \"./yahoo-provider\";\n\nexport {gmailProvider};\nexport {outlookProvider};\nexport {yahooProvider};\n\nconst emailProviders = [gmailProvider, outlookProvider, yahooProvider];\nexport default emailProviders;\n","import yahooIcon from \"../../imgs/yahoo.ico\";\nimport {pipe} from \"ramda\";\nimport hrefSanitizer from \"./href-sanitizer\";\n\nconst hrefResolver = ({email = '', cc = '', subject = '', body = ''}) => (\n  // Sep 19 2016 http://stackoverflow.com/a/30106907/1578294\n  `https://compose.mail.yahoo.com/?to=${email}&cc=${cc}&subject=${subject}&body=${body}`\n);\n\nconst yahooProvider = {\n  name: 'Yahoo',\n  src: yahooIcon,\n  hrefResolver: pipe(hrefSanitizer, hrefResolver),\n};\n\nexport default yahooProvider;\n","import './email-button.css';\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\n\nconst EmailButton = ({name = '', src = '', href = ''}) => (\n  <Button color=\"primary\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n    <img className=\"left-icon button-img\" width={24} height={24} src={src} alt={name}/>\n    {name}\n  </Button>\n);\n\nexport default EmailButton;\n","import EmailArray from \"./email-array\";\n\nexport default EmailArray;\n","import React from \"react\";\nimport {map} from \"ramda\";\nimport emailProviders from \"../../services/email-providers\";\nimport EmailButton from \"./email-button\";\n\nconst makeButtonFromProvider = ({email = '', cc = '', subject = '', body = ''}) =>\n  ({name = '', src = '', hrefResolver}) => (\n    <EmailButton\n      key={name}\n      name={name}\n      src={src}\n      href={hrefResolver({email, cc, subject, body})}/>\n  );\n\nconst EmailArray = ({email = '', cc = '', subject = '', body = ''}) => (\n  map(makeButtonFromProvider({email, cc, subject, body}))(emailProviders)\n);\n\nexport default EmailArray;\n","import CouncillorCard from \"./councillor-card\";\n\nexport default CouncillorCard;\n","import React from 'react';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport CallIcon from '@material-ui/icons/Call';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Typography from '@material-ui/core/Typography';\nimport {always, startsWith, when} from \"ramda\";\nimport './councillor-card.css';\nimport {Divider} from \"@material-ui/core\";\nimport makeYegCoreZoneEmail from \"../../utils/yeg-core-zone-template\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {MobileView} from \"react-device-detect\";\nimport EmailArray from \"../email-array\";\n\nconst defaultPhotoUrl = 'https://www.edmonton.ca/city_government/documents/Mayor-Headshot_800x494_rdax_500x309.jpg';\nconst cc = 'council@edmonton.ca';\n\nconst CouncillorCard = ({firstName = '', lastName = '', ward = '', role = '', phone = '', email = '', photoUrl = defaultPhotoUrl}) => {\n  const name = `${firstName} ${lastName}`;\n  const subtitle = when(startsWith('Councillor'), s => `${s} – ${ward}`)(role);\n  const normalizeWard = when(startsWith('City'), always('Edmonton'));\n\n  const [emailBody, emailDisplay, emailSubject] = makeYegCoreZoneEmail({role, lastName, ward: normalizeWard(ward)});\n\n  return <Paper>\n    <div className=\"contact\">\n      <img\n        className=\"image\"\n        src={photoUrl}\n        alt={name}\n      />\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {name}\n        </Typography>\n        <Typography color=\"textSecondary\" paragraph>\n          {subtitle}\n        </Typography>\n        <Typography component=\"pre\" className=\"template\">\n          {emailDisplay}\n        </Typography>\n      </CardContent>\n    </div>\n    <Divider/>\n    <CardActions>\n      <div className=\"email-array\">\n        <MobileView>\n          <Button color=\"primary\" href={`mailto:${email}`}>\n            <EmailIcon className=\"left-icon\"/>\n            Mail app\n          </Button>\n        </MobileView>\n        <EmailArray email={email} subject={emailSubject} body={emailBody} cc={cc}/>\n        <Button color=\"primary\" href={`tel:${phone}`}>\n          <CallIcon className=\"left-icon\"/>\n          Call\n        </Button>\n      </div>\n    </CardActions>\n  </Paper>;\n};\n\nexport default CouncillorCard;\n","const geolocationProvider = typeof navigator !== \"undefined\" && navigator.geolocation;\n\nexport default geolocationProvider;\n","import React, {useState} from 'react';\nimport './App.css';\nimport {useDebounce} from \"use-debounce\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport SearchBar from \"./components/search-bar\";\nimport useCouncillor from \"./hooks/use-councillor\";\nimport CouncillorCard from \"./components/councillor-card\";\nimport {geolocated} from \"react-geolocated\";\nimport geolocationProvider from \"./utils/geo-location-provider\";\nimport * as queryString from \"query-string\";\nimport classNames from \"classnames\";\nimport {Typography} from \"@material-ui/core\";\n\nconst geoLocatedConfig = {\n  positionOptions: {\n    enableHighAccuracy: false,\n    timeout: 5000,\n  },\n  userDecisionTimeout: 5000,\n  geolocationProvider,\n};\n\nconst App = ({coords}) => {\n  const [query, setQuery] = useState('');\n  const [debouncedQuery] = useDebounce(query, 300);\n  const [councillor, originalQuery] = useCouncillor({address: debouncedQuery, coords});\n  const {iframe_pls} = queryString.parse(window.location.search);\n\n  const className = classNames(\n    'app',\n    {'iframe-pls': iframe_pls},\n  );\n\n  return (\n    <div className={className}>\n      <CssBaseline/>\n      <SearchBar\n        label=\"Find councillor with postal code or address\"\n        query={query}\n        setQuery={setQuery}\n        isLoading={query !== debouncedQuery || debouncedQuery !== originalQuery}\n      />\n      <Typography gutterBottom/>\n      {councillor && <CouncillorCard {...councillor}/>}\n    </div>\n  );\n};\n\nexport default geolocated(geoLocatedConfig)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}