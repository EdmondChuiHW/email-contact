{"version":3,"sources":["components/Loading/Loading.js","components/Loading/index.js","components/DebouncedSearchBar/SearchBar/SearchBar.js","components/DebouncedSearchBar/SearchBar/index.js","components/DebouncedSearchBar/DebouncedSearchBar.js","components/DebouncedSearchBar/index.js","services/address2councillor.service.js","hooks/useCouncillor/index.js","hooks/useCouncillor/useCouncillor.js","utils/makeYegCoreZoneEmail.js","components/EmailButton/ImgOrLeft.js","components/EmailButton/EmailButton.js","components/EmailButton/index.js","services/email-providers/gmailProvider.js","services/email-providers/outlookProvider.js","services/email-providers/yahooProvider.js","services/email-providers/mailToProvider.js","services/email-providers/index.js","utils/hrefSanitizer.js","components/EmailArray/EmailArray.js","components/EmailArray/index.js","components/CouncillorCard/CouncillorCard.js","components/CouncillorCard/index.js","App.js","utils/geolocationProvider.js","serviceWorker.js","index.js","imgs/gmail.ico","imgs/outlook.ico","imgs/yahoo.ico"],"names":["defaultProps","isLoading","size","className","children","react_default","a","createElement","Fragment","Loading","_ref","CircularProgress_default","thickness","label","query","onQueryChange","always","onClearQuery","SearchBar","Paper_default","elevation","InputBase_default","autoComplete","placeholder","autoFocus","value","onChange","components_Loading","IconButton_default","aria-label","onClick","Clear_default","Search_default","debounceInMs","DebouncedSearchBar","_useState","useState","_useState2","Object","slicedToArray","setQuery","_useDebouncedCallback","useDebouncedCallback","debouncedQueryChange","newValueHandler","juxt","clearQuery","useCallback","e","target","DebouncedSearchBar_SearchBar","getCouncillorFromAddress","address","arguments","length","undefined","request","url","concat","process","json","qs","useCouncillor","_ref$address","_ref$coords","coords","latitude","longitude","councillor","setCouncillor","_useState3","_useState4","completedQuery","setCompletedQuery","onCouncillorLoaded","pipe","useEffect","req","_ref$latitude","_ref$longitude","getCouncillorFromGeo","then","abort","clickableCoreZone","href","rel","propTypes","role","PropTypes","lastName","ward","YegCoreZoneEmailDisplay","_ref2","makeYegCoreZoneEmail","_ref$role","_ref$lastName","_ref$ward","src","name","left","ImgOrLeft","width","height","alt","EmailButton","Button_default","color","EmailButton_ImgOrLeft","gmailProvider","gmailIcon","hrefResolver","_ref$email","email","_ref$cc","cc","_ref$subject","subject","_ref$body","body","outlookProvider","outlookIcon","yahooProvider","yahooIcon","mailToProvider","Email_default","commonEmailProviders","hrefSanitizer","rest","objectWithoutProperties","objectSpread","encodeURIComponent","defaultHrefResolverParams","hrefResolverParamsPicker","pick","keys","makeProviderToButtonMapperWithProps","hrefResolverParams","Button","components_EmailButton","assign","key","EmailArray","props","providers","map","CouncillorCard","firstName","phone","photoUrl","subtitle","when","startsWith","s","normalizeWard","_makeYegCoreZoneEmail","_makeYegCoreZoneEmail2","emailBody","emailDisplay","emailSubject","emailProviders","isMobile","toConsumableArray","CardContent_default","Typography_default","variant","component","paragraph","index_es","CardActions_default","components_EmailArray","Call_default","geoLocatedConfig","positionOptions","enableHighAccuracy","timeout","userDecisionTimeout","geolocationProvider","navigator","geolocation","App","_useCouncillor","_useCouncillor2","originalQuery","iframe_pls","queryString","window","location","search","classNames","iframe-pls","CssBaseline_default","components_DebouncedSearchBar","gutterBottom","components_CouncillorCard","geolocated","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f7c93706.chunk.js","sourcesContent":["import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as PropTypes from 'prop-types';\n\nconst propTypes = {\n  isLoading: PropTypes.bool,\n  size: PropTypes.number,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  isLoading: false,\n  size: 24,\n  className: '',\n  children: <></>,\n};\n\nconst Loading = ({\n  isLoading, size, className, children,\n}) => (isLoading\n  ? <CircularProgress size={size} thickness={4.8} className={className} />\n  : children);\n\nLoading.propTypes = propTypes;\nLoading.defaultProps = defaultProps;\n\nexport default Loading;\n","import Loading from './Loading';\n\nexport default Loading;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper/index';\nimport IconButton from '@material-ui/core/IconButton/index';\nimport InputBase from '@material-ui/core/InputBase/index';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport './SearchBar.css';\nimport { always } from 'ramda';\nimport * as PropTypes from 'prop-types';\nimport Loading from '../../Loading';\n\nconst propTypes = {\n  label: PropTypes.string,\n  query: PropTypes.string,\n  isLoading: PropTypes.bool,\n  onQueryChange: PropTypes.func,\n  onClearQuery: PropTypes.func,\n};\n\nconst defaultProps = {\n  label: '',\n  query: '',\n  isLoading: false,\n  onQueryChange: always,\n  onClearQuery: always,\n};\n\nconst SearchBar = ({\n  label, query, isLoading, onQueryChange, onClearQuery,\n}) => (\n  <Paper className=\"root\" elevation={1}>\n    <InputBase\n      autoComplete=\"postal-code\"\n      className=\"input\"\n      placeholder={label}\n      autoFocus\n      value={query}\n      onChange={onQueryChange}\n    />\n    <Loading isLoading={isLoading} className=\"loading\">\n      {query\n        ? (\n          <IconButton aria-label=\"Clear\" onClick={onClearQuery}>\n            <ClearIcon />\n          </IconButton>\n        )\n        : (\n          <IconButton aria-label=\"Search\">\n            <SearchIcon />\n          </IconButton>\n        )\n        }\n    </Loading>\n  </Paper>\n);\n\nSearchBar.propTypes = propTypes;\nSearchBar.defaultProps = defaultProps;\n\nexport default SearchBar;\n","import SearchBar from './SearchBar';\n\nexport default SearchBar;\n","import React, { useCallback, useState } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { always, juxt } from 'ramda';\nimport * as PropTypes from 'prop-types';\nimport SearchBar from './SearchBar';\n\nconst propTypes = {\n  label: PropTypes.string,\n  isLoading: PropTypes.bool,\n  onQueryChange: PropTypes.func,\n  debounceInMs: PropTypes.number,\n};\n\nconst defaultProps = {\n  label: '',\n  isLoading: false,\n  onQueryChange: always,\n  debounceInMs: 300,\n};\n\nconst DebouncedSearchBar = ({\n  label, isLoading, onQueryChange, debounceInMs,\n}) => {\n  const [query, setQuery] = useState('');\n  const [debouncedQueryChange] = useDebouncedCallback(onQueryChange, debounceInMs);\n  const newValueHandler = juxt([setQuery, debouncedQueryChange]);\n  const clearQuery = useCallback(() => newValueHandler(''), []);\n  const onChange = useCallback(e => newValueHandler(e.target.value), []);\n\n  return (\n    <SearchBar\n      isLoading={isLoading}\n      label={label}\n      query={query}\n      onQueryChange={onChange}\n      onClearQuery={clearQuery}\n    />\n  );\n};\n\nDebouncedSearchBar.propTypes = propTypes;\nDebouncedSearchBar.defaultProps = defaultProps;\n\nexport default DebouncedSearchBar;\n","import DebouncedSearchBar from './DebouncedSearchBar';\n\nexport default DebouncedSearchBar;\n","import request from 'request-promise-native';\n\nexport const getCouncillorFromAddress = (address = '') => request({\n  url: `${process.env.REACT_APP_ADDRESS_SERVER_HOST}/address2councillor`,\n  json: true,\n  qs: {\n    address,\n  },\n});\n\nexport const getCouncillorFromGeo = ({ latitude = 0, longitude = 0 }) => (\n  getCouncillorFromAddress(`geo: lng: ${longitude}, lat: ${latitude}`)\n);\n","import useCouncillor from './useCouncillor';\n\nexport default useCouncillor;\n","import { useEffect, useState } from 'react';\nimport { pipe } from 'ramda';\nimport { getCouncillorFromAddress, getCouncillorFromGeo } from '../../services/address2councillor.service';\n\nconst useCouncillor = ({ address = '', coords = { latitude: 0, longitude: 0 } }) => {\n  const [councillor, setCouncillor] = useState(undefined);\n  const [completedQuery, setCompletedQuery] = useState(undefined);\n\n  const onCouncillorLoaded = pipe(\n    setCouncillor,\n    () => setCompletedQuery(address),\n  );\n\n  useEffect(() => {\n    const req = coords && !address\n      ? getCouncillorFromGeo(coords)\n      : getCouncillorFromAddress(address);\n    req.then(onCouncillorLoaded);\n    return () => req.abort();\n  }, [address, coords]);\n  return [councillor, completedQuery];\n};\n\nexport default useCouncillor;\n","import React from 'react';\nimport { always, juxt } from 'ramda';\nimport * as PropTypes from 'prop-types';\n\nconst makeYegCoreZoneEmailBody = ({ role = 'Mayor', lastName = 'Iveson', ward = '' }) => (`Dear ${role} ${lastName},\n\nI'm writing in support of the #YEGCoreZone proposal.\n\nThank you,\nResident of ${ward || 'Edmonton'}`\n);\n\nconst clickableCoreZone = (\n  <a\n    href=\"https://twitter.com/search?q=YEGCoreZone\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n  #YEGCoreZone\n  </a>\n);\n\nconst propTypes = {\n  role: PropTypes.string,\n  lastName: PropTypes.string,\n  ward: PropTypes.string,\n};\n\nconst defaultProps = {\n  role: 'Mayor',\n  lastName: 'Iveson',\n  ward: '',\n};\n\n// todo use tagged template string\nconst YegCoreZoneEmailDisplay = ({ role, lastName, ward }) => (\n  <>\n    {`Dear ${role} ${lastName},\n\nI'm writing in support of the`}\n    {' '}\n    {clickableCoreZone}\n    {' '}\n    {`proposal.\n\nThank you,\nResident of ${ward || 'Edmonton'}`}\n  </>\n);\n\nYegCoreZoneEmailDisplay.propTypes = propTypes;\nYegCoreZoneEmailDisplay.defaultProps = defaultProps;\n\nconst makeYegCoreZoneEmail = juxt([\n  makeYegCoreZoneEmailBody,\n  YegCoreZoneEmailDisplay,\n  always('Support letter for #YEGCoreZone'),\n]);\n\nexport default makeYegCoreZoneEmail;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nconst propTypes = {\n  src: PropTypes.string,\n  name: PropTypes.string,\n  left: PropTypes.node,\n};\n\nconst defaultProps = {\n  src: '',\n  name: '',\n  left: <></>,\n};\n\nconst ImgOrLeft = ({ src, name, left }) => (src\n  ? (\n    <img\n      className=\"left-icon button-img\"\n      width={24}\n      height={24}\n      src={src}\n      alt={name}\n    />\n  )\n  : left);\n\nImgOrLeft.propTypes = propTypes;\nImgOrLeft.defaultProps = defaultProps;\n\nexport default ImgOrLeft;\n","import './EmailButton.css';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport * as PropTypes from 'prop-types';\nimport ImgOrLeft from './ImgOrLeft';\n\nconst propTypes = {\n  name: PropTypes.string,\n  src: PropTypes.string,\n  href: PropTypes.string,\n  left: PropTypes.node,\n};\n\nconst defaultProps = {\n  name: '',\n  src: '',\n  href: '',\n  left: <></>,\n};\n\nconst EmailButton = ({\n  name, src, href, left,\n}) => (\n  <Button\n    color=\"primary\"\n    href={href}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    <ImgOrLeft src={src} name={name} left={left} />\n    <span>{name}</span>\n  </Button>\n);\n\nEmailButton.propTypes = propTypes;\nEmailButton.defaultProps = defaultProps;\n\nexport default EmailButton;\n","import EmailButton from './EmailButton';\n\nexport default EmailButton;\n","import gmailIcon from '../../imgs/gmail.ico';\n\nconst hrefResolver = ({\n  email = '', cc = '', subject = '', body = '',\n}) => (\n  // Sep 19 2016 http://stackoverflow.com/a/8852679/\n  `https://mail.google.com/mail/?view=cm&fs=1&to=${email}&cc=${cc}&su=${subject}&body=${body}`\n);\n\nconst gmailProvider = {\n  name: 'Gmail',\n  src: gmailIcon,\n  hrefResolver,\n};\n\nexport default gmailProvider;\n","import outlookIcon from '../../imgs/outlook.ico';\n\nconst hrefResolver = ({\n  email = '', cc = '', subject = '', body = '',\n}) => (\n  // Apr 21 2019 https://blogs.msdn.microsoft.com/carloshm/2016/01/16/how-to-compose-a-new-message-or-event-and-populate-fields-in-office365/#comment-1645\n  // cc not support. Thanks Micro$0ft\n  `https://outlook.live.com/?path=/mail/action/compose&to=${email}&cc=${cc}&subject=${subject}&body=${body}`\n);\n\nconst outlookProvider = {\n  name: 'Outlook',\n  src: outlookIcon,\n  hrefResolver,\n};\n\nexport default outlookProvider;\n","import yahooIcon from '../../imgs/yahoo.ico';\n\nconst hrefResolver = ({\n  email = '', cc = '', subject = '', body = '',\n}) => (\n  // Sep 19 2016 http://stackoverflow.com/a/30106907/1578294\n  `https://compose.mail.yahoo.com/?to=${email}&cc=${cc}&subject=${subject}&body=${body}`\n);\n\nconst yahooProvider = {\n  name: 'Yahoo',\n  src: yahooIcon,\n  hrefResolver,\n};\n\nexport default yahooProvider;\n","import EmailIcon from '@material-ui/icons/Email';\nimport React from 'react';\n\nconst hrefResolver = ({\n  email = '', cc = '', subject = '', body = '',\n}) => (\n  `mailto:${email}?subject=${subject}&body=${body}&cc=${cc}`\n);\n\nconst mailToProvider = {\n  name: 'Mail app',\n  left: <EmailIcon className=\"left-icon\" />,\n  hrefResolver,\n};\n\nexport default mailToProvider;\n","import gmailProvider from './gmailProvider';\nimport outlookProvider from './outlookProvider';\nimport yahooProvider from './yahooProvider';\nimport mailToProvider from './mailToProvider';\n\nexport { gmailProvider };\nexport { outlookProvider };\nexport { yahooProvider };\nexport { mailToProvider };\n\nconst commonEmailProviders = [gmailProvider, outlookProvider, yahooProvider];\nexport default commonEmailProviders;\n","const hrefSanitizer = ({ subject = '', body = '', ...rest }) => ({\n  subject: encodeURIComponent(subject),\n  body: encodeURIComponent(body),\n  ...rest,\n});\n\nexport default hrefSanitizer;\n","import React from 'react';\nimport {\n  keys, map, pick, pipe,\n} from 'ramda';\nimport * as PropTypes from 'prop-types';\nimport EmailButton from '../EmailButton';\nimport commonEmailProviders from '../../services/email-providers';\nimport hrefSanitizer from '../../utils/hrefSanitizer';\n\nconst defaultHrefResolverParams = {\n  email: '', cc: '', subject: '', body: '',\n};\n\nconst makeButtonFromProvider = (hrefResolverParams = defaultHrefResolverParams) => {\n  const Button = ({ name, hrefResolver, ...rest }) => (\n    <EmailButton\n      key={name}\n      name={name}\n      href={pipe(hrefSanitizer, hrefResolver)(hrefResolverParams)}\n      {...rest}\n    />\n  );\n  Button.propTypes = {\n    name: PropTypes.string,\n    hrefResolver: PropTypes.func.isRequired,\n  };\n  Button.defaultProps = {\n    name: '',\n  };\n  return Button;\n};\n\nconst hrefResolverParamsPicker = pick(keys(defaultHrefResolverParams));\nconst makeProviderToButtonMapperWithProps = pipe(\n  hrefResolverParamsPicker,\n  makeButtonFromProvider,\n);\n\nconst EmailArray = (props = { providers: commonEmailProviders, ...defaultHrefResolverParams }) => (\n  map(makeProviderToButtonMapperWithProps(props), props.providers)\n);\n\nexport default EmailArray;\n","import EmailArray from './EmailArray';\n\nexport default EmailArray;\n","import React from 'react';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport CallIcon from '@material-ui/icons/Call';\nimport Typography from '@material-ui/core/Typography';\nimport { always, startsWith, when } from 'ramda';\nimport './CouncillorCard.css';\nimport { Divider } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { isMobile } from 'react-device-detect';\nimport * as PropTypes from 'prop-types';\nimport makeYegCoreZoneEmail from '../../utils/makeYegCoreZoneEmail';\nimport EmailArray from '../EmailArray';\nimport commonEmailProviders, { mailToProvider } from '../../services/email-providers';\n\nconst defaultPhotoUrl = 'https://www.edmonton.ca/city_government/documents/Mayor-Headshot_800x494_rdax_500x309.jpg';\nconst cc = 'council@edmonton.ca';\n\nconst propTypes = {\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  ward: PropTypes.string,\n  role: PropTypes.string,\n  phone: PropTypes.string,\n  email: PropTypes.string,\n  photoUrl: PropTypes.string,\n};\n\nconst defaultProps = {\n  firstName: '',\n  lastName: '',\n  ward: '',\n  role: '',\n  phone: '',\n  email: '',\n  photoUrl: defaultPhotoUrl,\n};\n\nconst CouncillorCard = ({\n  firstName, lastName, ward, role, phone, email, photoUrl,\n}) => {\n  const name = `${firstName} ${lastName}`;\n  const subtitle = when(startsWith('Councillor'), s => `${s} – ${ward}`)(role);\n  const normalizeWard = when(startsWith('City'), always('Edmonton'));\n\n  const [emailBody, emailDisplay, emailSubject] = makeYegCoreZoneEmail({\n    role,\n    lastName,\n    ward: normalizeWard(ward),\n  });\n  const emailProviders = isMobile\n    ? [mailToProvider, ...commonEmailProviders]\n    : [...commonEmailProviders, mailToProvider];\n\n  return (\n    <Paper>\n      <div className=\"contact\">\n        <img\n          className=\"image\"\n          src={photoUrl}\n          alt={name}\n        />\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography color=\"textSecondary\" paragraph>\n            {subtitle}\n          </Typography>\n          <Typography component=\"pre\" className=\"template\">\n            {emailDisplay}\n          </Typography>\n        </CardContent>\n      </div>\n      <Divider />\n      <CardActions>\n        <div className=\"email-array\">\n          <EmailArray\n            email={email}\n            subject={emailSubject}\n            body={emailBody}\n            cc={cc}\n            providers={emailProviders}\n          />\n          <Button color=\"primary\" href={`tel:${phone}`}>\n            <CallIcon className=\"left-icon\" />\n          Call\n          </Button>\n        </div>\n      </CardActions>\n    </Paper>\n  );\n};\n\nCouncillorCard.propTypes = propTypes;\nCouncillorCard.defaultProps = defaultProps;\n\nexport default CouncillorCard;\n","import CouncillorCard from './CouncillorCard';\n\nexport default CouncillorCard;\n","import React, { useState } from 'react';\nimport './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { geolocated } from 'react-geolocated';\nimport * as queryString from 'query-string';\nimport classNames from 'classnames';\nimport { Typography } from '@material-ui/core';\nimport * as PropTypes from 'prop-types';\nimport DebouncedSearchBar from './components/DebouncedSearchBar';\nimport useCouncillor from './hooks/useCouncillor';\nimport CouncillorCard from './components/CouncillorCard';\nimport geolocationProvider from './utils/geolocationProvider';\n\nconst geoLocatedConfig = {\n  positionOptions: {\n    enableHighAccuracy: false,\n    timeout: 5000,\n  },\n  userDecisionTimeout: 5000,\n  geolocationProvider,\n};\n\nconst propTypes = {\n  coords: PropTypes.shape({\n    latitude: PropTypes.number,\n    longitude: PropTypes.number,\n  }),\n};\n\nconst defaultProps = {\n  coords: undefined,\n};\n\nconst App = ({ coords }) => {\n  const [query, setQuery] = useState('');\n  const [councillor, originalQuery] = useCouncillor({ address: query, coords });\n  // eslint-disable-next-line camelcase\n  const { iframe_pls } = queryString.parse(window.location.search);\n\n  const className = classNames(\n    'app',\n    { 'iframe-pls': iframe_pls },\n  );\n\n  return (\n    <div className={className}>\n      <CssBaseline />\n      <DebouncedSearchBar\n        label=\"Find your councillor by postal code/address\"\n        onQueryChange={setQuery}\n        isLoading={query !== originalQuery}\n      />\n      <Typography gutterBottom />\n      {councillor && <CouncillorCard {...councillor} />}\n    </div>\n  );\n};\n\nApp.propTypes = propTypes;\nApp.defaultProps = defaultProps;\n\nexport default geolocated(geoLocatedConfig)(App);\n","const geolocationProvider = typeof navigator !== 'undefined' && navigator.geolocation;\n\nexport default geolocationProvider;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'core-js';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/gmail.2db0d88c.ico\";","module.exports = __webpack_public_path__ + \"static/media/outlook.759fade9.ico\";","module.exports = __webpack_public_path__ + \"static/media/yahoo.9796ed78.ico\";"],"sourceRoot":""}